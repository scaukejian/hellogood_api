<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hellogood.mapper.LoginRecordsMapper" >
  <resultMap id="BaseResultMap" type="com.hellogood.domain.LoginRecords" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login_id" property="loginId" jdbcType="INTEGER" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="client_type" property="clientType" jdbcType="VARCHAR" />
    <result column="apk_version" property="apkVersion" jdbcType="VARCHAR" />
    <result column="client_info" property="clientInfo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, login_id, operate_time, client_type, apk_version, client_info
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hellogood.domain.LoginRecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_login_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from api_login_records
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from api_login_records
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hellogood.domain.LoginRecordsExample" >
    delete from api_login_records
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hellogood.domain.LoginRecords" >
    insert into api_login_records (id, login_id, operate_time, 
      client_type, apk_version, client_info
      )
    values (#{id,jdbcType=INTEGER}, #{loginId,jdbcType=INTEGER}, #{operateTime,jdbcType=TIMESTAMP}, 
      #{clientType,jdbcType=VARCHAR}, #{apkVersion,jdbcType=VARCHAR}, #{clientInfo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hellogood.domain.LoginRecords" >
    insert into api_login_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="clientType != null" >
        client_type,
      </if>
      <if test="apkVersion != null" >
        apk_version,
      </if>
      <if test="clientInfo != null" >
        client_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clientType != null" >
        #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="apkVersion != null" >
        #{apkVersion,jdbcType=VARCHAR},
      </if>
      <if test="clientInfo != null" >
        #{clientInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update api_login_records
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null" >
        login_id = #{record.loginId,jdbcType=INTEGER},
      </if>
      <if test="record.operateTime != null" >
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clientType != null" >
        client_type = #{record.clientType,jdbcType=VARCHAR},
      </if>
      <if test="record.apkVersion != null" >
        apk_version = #{record.apkVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.clientInfo != null" >
        client_info = #{record.clientInfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update api_login_records
    set id = #{record.id,jdbcType=INTEGER},
      login_id = #{record.loginId,jdbcType=INTEGER},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      client_type = #{record.clientType,jdbcType=VARCHAR},
      apk_version = #{record.apkVersion,jdbcType=VARCHAR},
      client_info = #{record.clientInfo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hellogood.domain.LoginRecords" >
    update api_login_records
    <set >
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clientType != null" >
        client_type = #{clientType,jdbcType=VARCHAR},
      </if>
      <if test="apkVersion != null" >
        apk_version = #{apkVersion,jdbcType=VARCHAR},
      </if>
      <if test="clientInfo != null" >
        client_info = #{clientInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hellogood.domain.LoginRecords" >
    update api_login_records
    set login_id = #{loginId,jdbcType=INTEGER},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      client_type = #{clientType,jdbcType=VARCHAR},
      apk_version = #{apkVersion,jdbcType=VARCHAR},
      client_info = #{clientInfo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>